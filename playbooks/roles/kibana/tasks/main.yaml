---
  - name: Make sure /var/lib/kibana directory exists
    file:
      path: /var/lib/kibana
      state: directory

  - name: Make sure /var/lib/kibana/config directory exists
    file:
      path: /var/lib/kibana/config
      state: directory
      owner: "1000"
      group: "1000"
      mode: "644"

  - name: Make sure /var/lib/kibana/certs directory exists
    file:
      path: /var/lib/kibana/config/certs
      state: directory
      owner: "1000"
      group: "1000"
      mode: "644"

  - name: Copy kibana config file
    template:
      src: kibana.yml.j2
      dest: /var/lib/kibana/config/kibana.yml
      owner: "1000"
      group: "1000"
      mode: "644"
    notify: restart kibana

  - name: Copying kibana ca certificate
    copy:
      src: "{{ kibana_ca }}"
      dest: /var/lib/kibana/config/certs/ca.crt
      owner: "1000"
      group: "1000"
      mode: "644"

  - name: Copying kibana keystore
    copy:
      src: "{{ kibana_keystore }}"
      dest: "/var/lib/kibana/config/kibana.keystore"
      owner: "1000"
      group: "1000"
      mode: "644"

  - name: Copying kibana key
    copy:
      src: "{{ kibana_key }}"
      dest: /var/lib/kibana/config/certs/kibana.key
      owner: "1000"
      group: "1000"
      mode: "644"

  - name: Copying kibana certificate
    copy:
      src: "{{ kibana_crt }}"
      dest: /var/lib/kibana/config/certs/kibana.crt
      owner: "1000"
      group: "1000"
      mode: "644"

  - name: Install pip3
    apt: state=present pkg=python3-pip

  - pip:
      name: docker

  - name: "Pull docker image {{ kibana_image }}"
    docker_image:
      name: "{{ kibana_image }}"

  - name: Ensure kibana container is present
    docker_container:
      name: kibana
      image: "{{ kibana_image }}"
      state: present
      links: elasticsearch
      exposed: [5601]
      restart_policy: always
      volumes:
        - /var/lib/kibana/config/kibana.keystore:/usr/share/kibana/data/kibana.keystore:ro
        - /var/lib/kibana/config/certs/ca.crt:/usr/share/kibana/config/certs/ca.crt:ro
        - /var/lib/kibana/config/certs/kibana.crt:/usr/share/kibana/config/certs/kibana.crt:ro
        - /var/lib/kibana/config/certs/kibana.key:/usr/share/kibana/config/certs/kibana.key:ro
        - /var/lib/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    notify: restart kibana
    register: kibana_container

  # Flush the handler to ensure container are started or restarted in case it needs
  - name: Flushing handlers
    meta: flush_handlers

  - name: Set Kibana container URL
    set_fact:
      kibana_container_url: "http://{{ kibana_container['ansible_facts']['docker_container']['NetworkSettings']['IPAddress'] }}:5601"

  - name: "Wait for kibana to be running at {{ kibana_container_url }}"
    uri:
      url: "{{ kibana_container_url }}"
      status_code: 200
    register: result
    until: result.status == 200
    retries: 60
    delay: 5
