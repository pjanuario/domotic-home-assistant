---
  - name: Make sure /var/lib/homeassistant directory exists
    file:
      path: /var/lib/homeassistant
      state: directory

  - name: Make sure /var/lib/homeassistant/config directory exists
    file:
      path: /var/lib/homeassistant/config
      state: directory
      owner: "1000"
      group: "1000"
      mode: "g+rwx"

  - name: Make sure /var/lib/homeassistant/data directory exists
    file:
      path: /var/lib/homeassistant/data
      state: directory
      owner: "1000"
      group: "1000"
      mode: "g+rwx"
    register: homeassistant_data_dir_create

  - name: Copy homeassistant storage onboarding
    copy:
      src: onboarding
      dest: /var/lib/homeassistant/data/onboarding
      owner: "1000"
      group: "1000"
      mode: "g+rwx"
    when: homeassistant_data_dir_create.changed

  - name: Copy homeassistant storage auth
    template:
      src: auth.j2
      dest: /var/lib/homeassistant/data/auth
      owner: "1000"
      group: "1000"
      mode: "g+rwx"
    when: homeassistant_data_dir_create.changed

  - name: Copy homeassistant storage auth provider
    template:
      src: auth_provider.homeassistant.j2
      dest: /var/lib/homeassistant/data/auth_provider.homeassistant
      owner: "1000"
      group: "1000"
      mode: "g+rwx"
    when: homeassistant_data_dir_create.changed

  - name: Copy homeassistant configuration folder
    copy:
      src: "{{ homeassistant_config_path }}/{{ item }}"
      dest: "/var/lib/homeassistant/config/{{item}}"
      owner: "1000"
      group: "1000"
      mode: "g+rwx"
    with_items: "{{ homeassistant_config_files }}"
    notify: restart homeassistant

  - name: Install pip3
    apt: state=present pkg=python3-pip

  - pip:
      name: docker

  - name: "Pull docker image {{ homeassistant_image }}"
    docker_image:
      name: "{{ homeassistant_image }}"

  - name: Ensure homeassistant container is present
    docker_container:
      name: homeassistant
      image: "{{ homeassistant_image }}"
      labels:
        traefik.frontend.rule: "Host:{{ homeassistant_domain }}"
      state: present
      links:
        - postgres:pg
        - mqtt
      exposed: [8123]
      restart_policy: always
      volumes:
        - /var/lib/homeassistant/config:/config:rw
        - /var/lib/homeassistant/data:/config/.storage:rw
    notify: restart homeassistant
    register: homeassistant_container

  # Flush the handler to ensure container are started or restarted in case it needs
  - name: Flushing handlers
    meta: flush_handlers

  - name: Set Homeassistant container URL
    set_fact:
      homeassistant_container_url: "http://{{ homeassistant_container['ansible_facts']['docker_container']['NetworkSettings']['IPAddress'] }}:8123"

  - name: "Wait for homeassistant to be running at {{ homeassistant_container_url }}"
    uri:
      url: "{{ homeassistant_container_url }}"
      status_code: 200
    register: result
    until: result.status == 200
    retries: 60
    delay: 5
